{
  "version": "3.2",
  "log": [
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "e4661489d265f32b8d3e07ea79e57c0eabdb6a68ed0babf5fccf4242d9d43683",
          "withoutMetadata": "41fbf43985f29b07ef830e17a54d1b54c861b0e459252a43a69b6783ef11fff9",
          "linkedWithoutMetadata": "41fbf43985f29b07ef830e17a54d1b54c861b0e459252a43a69b6783ef11fff9"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721EnumerableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:15",
        "inherit": [
          "IERC721EnumerableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)46_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
            }
          ],
          "types": {
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721URIStorageUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:12",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:24"
            },
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:76"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721EnumerableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "0424fcd99e6356ed7bd04b9436d156544e20204ad060cd1d3b1cb906063c09be",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:14",
        "version": {
          "withMetadata": "9d73aaf560c77688129cdb0762d530ffe3569abf280cfef8159bc592a8e1da87",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "e43247cb84e641cf4a5c5c602fe32968f69f715f4623e1ee3bd3758030581dfb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "758ba38ada3a6bc9ef2bb1e0968ce40d24d438626a8d8416d8578e8fbf9ddf2a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "NFTMarket": {
        "src": "contracts/Market.sol:14",
        "version": {
          "withMetadata": "1374daf9a5017babe1a909a333c720626847ba608bab5ef6e3147475d012d574",
          "withoutMetadata": "a795ca4ac8ec3f63296ff98773bcdd50afc9415db2a4cc15af2b64687ff4c2ef",
          "linkedWithoutMetadata": "a795ca4ac8ec3f63296ff98773bcdd50afc9415db2a4cc15af2b64687ff4c2ef"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "Initializable",
          "IAuctionHouse"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "()",
          "initialize(uint8)",
          "getListingPrice()",
          "createMarketItem(address,uint256,uint256)",
          "createAuction(address,uint256)",
          "createMarketSale(address,uint256)",
          "fetchMarketItems()",
          "fetchMyNFTs()",
          "fetchItemsCreated()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "NFTMarket",
              "label": "_itemIds",
              "type": "t_struct(Counter)2646_storage",
              "src": "contracts/Market.sol:16"
            },
            {
              "contract": "NFTMarket",
              "label": "_itemsSold",
              "type": "t_struct(Counter)2646_storage",
              "src": "contracts/Market.sol:17"
            },
            {
              "contract": "NFTMarket",
              "label": "listingPrice",
              "type": "t_uint256",
              "src": "contracts/Market.sol:19"
            },
            {
              "contract": "NFTMarket",
              "label": "duration",
              "type": "t_uint256",
              "src": "contracts/Market.sol:20"
            },
            {
              "contract": "NFTMarket",
              "label": "version",
              "type": "t_string_storage",
              "src": "contracts/Market.sol:21"
            },
            {
              "contract": "NFTMarket",
              "label": "minBidIncrementPercentage",
              "type": "t_uint8",
              "src": "contracts/Market.sol:24"
            },
            {
              "contract": "NFTMarket",
              "label": "auction",
              "type": "t_struct(Auction)5692_storage",
              "src": "contracts/Market.sol:30"
            },
            {
              "contract": "NFTMarket",
              "label": "idToMarketItem",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)3186_storage)",
              "src": "contracts/Market.sol:63"
            }
          ],
          "types": {
            "t_struct(Counter)2646_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_struct(Auction)5692_storage": {
              "label": "struct IAuctionHouse.Auction",
              "members": [
                {
                  "label": "nounId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "settled",
                  "type": "t_bool"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)3186_storage)": {
              "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
            },
            "t_struct(MarketItem)3186_storage": {
              "label": "struct NFTMarket.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "owner",
                  "type": "t_address_payable"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "sold",
                  "type": "t_bool"
                },
                {
                  "label": "auction",
                  "type": "t_bool"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "NFTMarketV2": {
        "src": "contracts/MarketV2.sol:14",
        "version": {
          "withMetadata": "db44e86c52e20a31ff7fcd6eaef3a82fd8e87a5f2aa5419705b36b171a64881f",
          "withoutMetadata": "edeb51352ea5a4ef04f5abbfcab6bd4b9995cfbfa77d8e2ac16d7ecbe57dd7bf",
          "linkedWithoutMetadata": "edeb51352ea5a4ef04f5abbfcab6bd4b9995cfbfa77d8e2ac16d7ecbe57dd7bf"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "Initializable",
          "IAuctionHouse"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "()",
          "getListingPrice()",
          "createMarketItem(address,uint256,uint256)",
          "createAuction(address,uint256)",
          "createMarketSale(address,uint256)",
          "fetchMarketItems()",
          "fetchMyNFTs()",
          "fetchItemsCreated()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "NFTMarketV2",
              "label": "_itemIds",
              "type": "t_struct(Counter)2646_storage",
              "src": "contracts/MarketV2.sol:16"
            },
            {
              "contract": "NFTMarketV2",
              "label": "_itemsSold",
              "type": "t_struct(Counter)2646_storage",
              "src": "contracts/MarketV2.sol:17"
            },
            {
              "contract": "NFTMarketV2",
              "label": "listingPrice",
              "type": "t_uint256",
              "src": "contracts/MarketV2.sol:19"
            },
            {
              "contract": "NFTMarketV2",
              "label": "duration",
              "type": "t_uint256",
              "src": "contracts/MarketV2.sol:20"
            },
            {
              "contract": "NFTMarketV2",
              "label": "version",
              "type": "t_string_storage",
              "src": "contracts/MarketV2.sol:21"
            },
            {
              "contract": "NFTMarketV2",
              "label": "minBidIncrementPercentage",
              "type": "t_uint8",
              "src": "contracts/MarketV2.sol:24"
            },
            {
              "contract": "NFTMarketV2",
              "label": "auction",
              "type": "t_struct(Auction)5692_storage",
              "src": "contracts/MarketV2.sol:30"
            },
            {
              "contract": "NFTMarketV2",
              "label": "idToMarketItem",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)3925_storage)",
              "src": "contracts/MarketV2.sol:52"
            }
          ],
          "types": {
            "t_struct(Counter)2646_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_struct(Auction)5692_storage": {
              "label": "struct IAuctionHouse.Auction",
              "members": [
                {
                  "label": "nounId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "settled",
                  "type": "t_bool"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)3925_storage)": {
              "label": "mapping(uint256 => struct NFTMarketV2.MarketItem)"
            },
            "t_struct(MarketItem)3925_storage": {
              "label": "struct NFTMarketV2.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "owner",
                  "type": "t_address_payable"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "sold",
                  "type": "t_bool"
                },
                {
                  "label": "auction",
                  "type": "t_bool"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "NFTMarketV3": {
        "src": "contracts/MarketV3.sol:14",
        "version": {
          "withMetadata": "0f78129a6bfdbb5fbf4a7a9fb7752ed6d0cf62bbb276a5f511f5f5affed6880d",
          "withoutMetadata": "4ef9c1c789b095934b7fab805f0f9e02c415f2bf10c88410b1cd207d71fdc8b7",
          "linkedWithoutMetadata": "4ef9c1c789b095934b7fab805f0f9e02c415f2bf10c88410b1cd207d71fdc8b7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "Initializable",
          "IAuctionHouse"
        ],
        "libraries": [
          "CountersUpgradeable"
        ],
        "methods": [
          "()",
          "getListingPrice()",
          "incrementListingPrice()",
          "createMarketItem(address,uint256,uint256)",
          "createAuction(address,uint256)",
          "createMarketSale(address,uint256)",
          "fetchMarketItems()",
          "fetchMyNFTs()",
          "fetchItemsCreated()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "NFTMarketV3",
              "label": "_itemIds",
              "type": "t_struct(Counter)2646_storage",
              "src": "contracts/MarketV3.sol:16"
            },
            {
              "contract": "NFTMarketV3",
              "label": "_itemsSold",
              "type": "t_struct(Counter)2646_storage",
              "src": "contracts/MarketV3.sol:17"
            },
            {
              "contract": "NFTMarketV3",
              "label": "listingPrice",
              "type": "t_uint256",
              "src": "contracts/MarketV3.sol:19"
            },
            {
              "contract": "NFTMarketV3",
              "label": "duration",
              "type": "t_uint256",
              "src": "contracts/MarketV3.sol:20"
            },
            {
              "contract": "NFTMarketV3",
              "label": "version",
              "type": "t_string_storage",
              "src": "contracts/MarketV3.sol:21"
            },
            {
              "contract": "NFTMarketV3",
              "label": "minBidIncrementPercentage",
              "type": "t_uint8",
              "src": "contracts/MarketV3.sol:24"
            },
            {
              "contract": "NFTMarketV3",
              "label": "auction",
              "type": "t_struct(Auction)5692_storage",
              "src": "contracts/MarketV3.sol:30"
            },
            {
              "contract": "NFTMarketV3",
              "label": "idToMarketItem",
              "type": "t_mapping(t_uint256,t_struct(MarketItem)4668_storage)",
              "src": "contracts/MarketV3.sol:56"
            }
          ],
          "types": {
            "t_struct(Counter)2646_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_struct(Auction)5692_storage": {
              "label": "struct IAuctionHouse.Auction",
              "members": [
                {
                  "label": "nounId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                },
                {
                  "label": "bidder",
                  "type": "t_address_payable"
                },
                {
                  "label": "settled",
                  "type": "t_bool"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_struct(MarketItem)4668_storage)": {
              "label": "mapping(uint256 => struct NFTMarketV3.MarketItem)"
            },
            "t_struct(MarketItem)4668_storage": {
              "label": "struct NFTMarketV3.MarketItem",
              "members": [
                {
                  "label": "itemId",
                  "type": "t_uint256"
                },
                {
                  "label": "nftContract",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "seller",
                  "type": "t_address_payable"
                },
                {
                  "label": "owner",
                  "type": "t_address_payable"
                },
                {
                  "label": "price",
                  "type": "t_uint256"
                },
                {
                  "label": "sold",
                  "type": "t_bool"
                },
                {
                  "label": "auction",
                  "type": "t_bool"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "NFT": {
        "src": "contracts/NFT.sol:13",
        "version": {
          "withMetadata": "eb1f8e19342a26424eaa01e82cd48ae892ed15e82d2b12e71f72f3f32e85255b",
          "withoutMetadata": "44620243aa0319273f63a7f35d36195f8f5bda9761a6bbe011dfaad5c3e23784",
          "linkedWithoutMetadata": "44620243aa0319273f63a7f35d36195f8f5bda9761a6bbe011dfaad5c3e23784"
        },
        "inherit": [
          "ERC721EnumerableUpgradeable",
          "IERC721EnumerableUpgradeable",
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721URIStorageUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "()",
          "initialize(address,string,string)",
          "tokenURI(uint256)",
          "supportsInterface(bytes4)",
          "royaltiesReceiver()",
          "setRoyaltiesReceiver(address)",
          "tokensOfOwner(address)",
          "royaltyInfo(uint256,uint256)",
          "createToken(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "NFT",
              "label": "contractAddress",
              "type": "t_address",
              "src": "contracts/NFT.sol:15"
            },
            {
              "contract": "NFT",
              "label": "version",
              "type": "t_string_storage",
              "src": "contracts/NFT.sol:16"
            },
            {
              "contract": "NFT",
              "label": "_royaltiesReceiver",
              "type": "t_address",
              "src": "contracts/NFT.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAuctionHouse": {
        "src": "contracts/interfaces/IAuctionHouse.sol:36",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC2981": {
        "src": "contracts/interfaces/IERC2981.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "7834e21e0ea33e4c3a2f819edbce6a8f6846480e90375055f200ce665697b279",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}